stages:
    - compile
    - build
    - yandex cloud

variables:
    REGISTRY_HOST: cr.yandex/crpv0h5hvf1nqjp7ptf1
    CONTAINER_IMAGE: $REGISTRY_HOST/dashboard/frontend:$CI_BUILD_REF_NAME

image: docker:18-git
services:
    - docker:18-dind

compile_cli:
    stage: compile
    image: node:14
    services: []
    script:
        - npm install
        - npm run build
    cache:
        key: ${CI_PROJECT_PATH_SLUG}
        policy: push
        paths:
            - dist/
    only:
        - master
        - stag

build_cli:
    stage: build
    before_script:
        - cat $YC_CR_JSON_KEY | docker login --username json_key --password-stdin cr.yandex
    script:
        - docker build -f ./.docker/Dockerfile -t $CONTAINER_IMAGE .
        - docker push $CONTAINER_IMAGE
        - echo ${CI_PROJECT_PATH_SLUG}
        - echo $CI_BUILD_REF_NAME
    cache:
        key: ${CI_PROJECT_PATH_SLUG}
        policy: pull
        paths:
            - dist/
    only:
        - master
        - stag

.deploy:
    stage: yandex cloud
    image: alpine/k8s:1.20.4
    services: [ ]
    before_script:
        - kubectl config set-cluster k8s --server="$KUBE_URL" --insecure-skip-tls-verify=true
        - kubectl config set-credentials admin --token="$KUBE_TOKEN"
        - kubectl config set-context default --cluster=k8s --user=admin
        - kubectl config use-context default
    cache: {}

deploy_stag:
    extends: .deploy
    script:
        - kubectl rollout restart deployment --namespace staging dashboard-frontend-stag
    only:
        - stag
        - master

#deploy_prod:
#    extends: .deploy
#    script:
#        - kubectl rollout restart deployment --namespace production mongodb-writer-prod
#    only:
#        - master